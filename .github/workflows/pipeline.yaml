name: Pipeline

on:
  push:
    branches:
      - 'master'
      - 'feature**'

env:
  PIPELINE_USER_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  PIPELINE_USER_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TEMPLATE_NAME: template.yaml
  TESTING_STACK_NAME: scatter-ui-test
  TESTING_PIPELINE_EXECUTION_ROLE: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/scatter-pipeline-test
  TESTING_CLOUDFORMATION_EXECUTION_ROLE: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/scatter-cloudformation-test
  TESTING_S3_BUCKET: scatter-ui-test
  TESTING_REGION: ${{ secrets.AWS_REGION }}
  PROD_STACK_NAME: scatter-ui
  PROD_PIPELINE_EXECUTION_ROLE: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/scatter-pipeline
  PROD_CLOUDFORMATION_EXECUTION_ROLE: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/scatter-cloudformation
  PROD_S3_BUCKET: scatter-ui-source
  PROD_REGION: ${{ secrets.AWS_REGION }}

jobs:
  test:
    name: Run unit tests
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v2
      - name: Install Node 16
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - name: Install NPM 8
        run: npm install -g npm@8

      - name: Install and audit packages
        run: npm ci
        # run: npm ci && npm audit --audit-level=critical
        env:
          NODE_ENV: test
      - name: Run tests
        run: npm run test

  build-and-deploy-feature:
    name: Deploy feature branch
    if: startsWith(github.ref, 'refs/heads/feature')
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v2

      - name: Install Node 16
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - name: Install NPM 8
        run: npm install -g npm@8
      - name: Build Gatsby site
        run: npm run build
        env:
          DEVELOPMENT: true
          NODE_ENV: production

      - name: Install Python 2
        uses: actions/setup-python@v2
      - name: Install AWS SAM
        uses: aws-actions/setup-sam@v1
      - name: Assume the testing pipeline user role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.PIPELINE_USER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.PIPELINE_USER_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.TESTING_REGION }}
          role-to-assume: ${{ env.TESTING_PIPELINE_EXECUTION_ROLE }}
          role-session-name: feature-deployment
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Deploy test infrastructure
        shell: bash
        run: |
          sam deploy --stack-name ${{ env.TESTING_STACK_NAME }} \
            --template-file ${{ env.TEMPLATE_NAME }} \
            --region ${{ secrets.AWS_REGION }} \
            --no-fail-on-empty-changeset \
            --role-arn ${TESTING_CLOUDFORMATION_EXECUTION_ROLE} \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides 'Environment=test'
      - name: Copy static site to test S3 bucket
        run: ./scripts/copyToS3.sh ${TESTING_S3_BUCKET}

  deploy-testing:
    name: Deploy to test environment
    if: github.ref == 'refs/heads/master'
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v2

      - name: Install Node 16
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - name: Install NPM 8
        run: npm install -g npm@8
      - name: Build Gatsby site
        run: npm run build
        env:
          DEVELOPMENT: true
          NODE_ENV: production

      - name: Install Python 2
        uses: actions/setup-python@v2
      - name: Install AWS SAM
        uses: aws-actions/setup-sam@v1
      - name: Assume the testing pipeline user role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.PIPELINE_USER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.PIPELINE_USER_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.TESTING_REGION }}
          role-to-assume: ${{ env.TESTING_PIPELINE_EXECUTION_ROLE }}
          role-session-name: feature-deployment
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Deploy test infrastructure
        shell: bash
        run: |
          sam deploy --stack-name ${{ env.TESTING_STACK_NAME }} \
            --template-file ${{ env.TEMPLATE_NAME }} \
            --region ${{ secrets.AWS_REGION }} \
            --no-fail-on-empty-changeset \
            --role-arn ${TESTING_CLOUDFORMATION_EXECUTION_ROLE} \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides 'Environment=test'
      - name: Copy static site to test S3 bucket
        run: ./scripts/copyToS3.sh ${{ env.TESTING_S3_BUCKET }}

  deploy-production:
    name: Deploy to production
    if: github.ref == 'refs/heads/master'
    needs: [deploy-testing]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v2

      - name: Install Node 16
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - name: Install NPM 8
        run: npm install -g npm@8
      - name: Build Gatsby site
        run: npm run build
        env:
          NODE_ENV: production

      - name: Install Python 2
        uses: actions/setup-python@v2
      - name: Install AWS SAM
        uses: aws-actions/setup-sam@v1
      - name: Assume the production pipeline user role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.PIPELINE_USER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.PIPELINE_USER_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.PROD_REGION }}
          role-to-assume: ${{ env.PROD_PIPELINE_EXECUTION_ROLE }}
          role-session-name: feature-deployment
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Deploy production infrastructure
        shell: bash
        run: |
          sam deploy --stack-name ${{ env.PROD_STACK_NAME }} \
            --template-file ${{ env.TEMPLATE_NAME }} \
            --region ${{ secrets.AWS_REGION }} \
            --no-fail-on-empty-changeset \
            --role-arn ${PROD_CLOUDFORMATION_EXECUTION_ROLE} \
            --capabilities CAPABILITY_NAMED_IAM
      - name: Copy static site to production S3 bucket
        run: ./scripts/copyToS3.sh ${{ env.PROD_S3_BUCKET }}

  bump:
    name: Bump the version number and tag the commit
    needs: [deploy-production]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v2
      - name: Install Node 16
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - name: Install NPM 8
        run: npm install -g npm@8

      - name: Set git name and email
        run: |
          git config --local user.email "dbowland1+bot@gmail.com"
          git config --local user.name "github-actions[bot]"
      - name: Bump the minor version
        run: npm version minor
      - name: Push tag created by version bump
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
